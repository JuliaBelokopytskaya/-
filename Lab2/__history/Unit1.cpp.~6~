//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit1.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
	: TForm(Owner)
{
}

//---------------------------------------------------------------------------
 //---------------------------------------------------------------------------
int *A, *b;
int N=1000;
void __fastcall TForm1::FormCreate(TObject *Sender)
{
	randomize();
	StringGrid1->ColCount=N;
	for(int i=0; i<N;i++)
		StringGrid1->Cells[i][0] = IntToStr(random(21)-10);
}
//---------------------------------------------------------------------------

void sort(int *digitals){
 for (int i = 0; i < N; i++) {

	for (int j = 0; j < N-1; j++) {
	  if (digitals[j] < digitals[j + 1]) {
		int b = digitals[j];
		digitals[j] = digitals[j + 1];
		digitals[j + 1] = b;
	  }
    }
  }
}
void __fastcall TForm1::Button1Click(TObject *Sender)
{
	float s=0;
	int i,j;
	A = new int[N];
	//b = new float[N];
	for(i=0; i<N;i++)
		A[i]=StrToFloat(StringGrid1->Cells[j+1][0]);
	sort(A);
	for (i=0;i<N;i++)
		StringGrid1->Cells[i][0] = IntToStr(A[i]);
//	for(i=0; i<N;i++) {
//		for(j=0; j<M;j++){
//			s+=A[i][j];
//		}
//		b[i]=s/M;
//
//		s=0;
//	}
//	for (i=0;i<N;i++)
//		StringGrid2->Cells[i+1][0] = FloatToStr(b[i]);
//	for (i=0;i<N;i++)
//		delete[] A[i];
	delete [] A;
   }

//---------------------------------------------------------------------------


